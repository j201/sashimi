str = "foo";
regex = /foo/g;
number = 2;
bool = true;
keyword = .a;
nilVal = nil;

sumSign = fn a, b:
	let sum = a + b:
		if sum > 0: "+",
		if sum < 0: "-",
			"0";

multi = fn[
	a: a + 0,
	a, b: a + b,
	a, b, c: a - c
];

multi(fn x: x, fn x, y: x + y);

negate = fn x: -x;

myFn = fn a, b:
	sumSign(negate(a), b);

thing = fn x:
	(x = 1, x = 2);

myVec = [1, 2, 3];
myMap = {.a, 1, .b, 2};

myFn(myMap.a.b);

myMap.c = 3;

`console.log('done')`;

!myMap^myFn(2);

negate();

js.alert(js.document.body);

type Cons = fn a, b:
	[a, b];

Cons^length = fn cons:
	if cons(1) == null:
		0,
		1 + length(cons(1));
